#title         :docker.run
#description   :This file builds the correct arguments for the docker run cmd
#author        :Austin Owens
#date          :9/18/2022
#common_usage  :./docker.run -u <usr> -s $(pwd)/workspace -i yocto-img <container_cmd>
#=====================================================================================

function print_usage() {
    cat <<EOF
OPTIONS:
    docker.run [options] container_cmd
    -h: Help
    -s <name>: Name of the dir to mount outside (src) the container
    -u <name>: A user to use inside the container (should be same as container build arg)
    -i <name>: The name of the docker image to run
    -n: Do not use interactive input (TTY)
    container_cmd: What you want to run inside of the container (e.g. /bin/bash)
EOF
    exit 1
}

usr=
src_dir=
img=
tty="t"

while getopts 'hu:s:i:n' opt
do
    case $opt in
    h)
        print_usage
        ;;
    u)
        usr="$OPTARG"
        ;;
    s)
        src_dir="$OPTARG"
        ;;
    i)
        img="$OPTARG"
        ;;
    n)
        tty=""
        ;;
    *)
        print_usage
        ;;
    esac
done

container_cmd=${@:$OPTIND:1}

if [ -z "${container_cmd}" ]
then
    echo "Missing a positional argument. container_cmd must be specified."
    exit 1
fi

if [ -z ${usr} ]
then
    echo "[ERROR] Required argument for docker image -u"
    exit 1
fi


if [ -z ${src_dir} ]
then
    echo "[ERROR] Required argument for docker image -s"
    exit 1
fi


if [ -z ${img} ]
then
    echo "[ERROR] Required argument for docker image -i"
    exit 1
fi
set -x

docker run \
   -i"${tty}" \
   -p 8000:8000 \
   --rm \
   --name "yocto_build" \
   --privileged \
   --volume="${src_dir}:/home/${usr}/workspace":rw \
   -u ${usr} \
   -w /home/${usr} ${img} "${container_cmd}"

